# Tên của kịch bản tự động, sẽ hiển thị trong tab "Actions" của GitHub
name: Build TuTienHi Plugin

# Điều kiện để kịch bản này được kích hoạt
on:
  # Chạy mỗi khi có code được đẩy (push) lên nhánh "main"
  push:
    branches: [ "main" ]
  # Cũng chạy khi có một Pull Request được tạo hoặc cập nhật nhắm vào nhánh "main"
  pull_request:
    branches: [ "main" ]

# Các công việc (jobs) cần thực hiện
jobs:
  # Đặt tên cho công việc là "build"
  build:
    # Chọn một máy chủ ảo chạy hệ điều hành Ubuntu phiên bản mới nhất
    runs-on: ubuntu-latest

    # Các bước (steps) chi tiết của công việc
    steps:
      # Bước 1: Tải mã nguồn của bạn từ kho chứa về máy chủ ảo
      # 'uses' có nghĩa là sử dụng một Action đã được cộng đồng tạo sẵn
      - name: Checkout repository
        uses: actions/checkout@v4

      # Bước 2: Cài đặt môi trường Java (JDK) phiên bản 17
      # 'with' là các tùy chọn cho Action đó
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          # Chỉ định phiên bản Java
          java-version: '17'
          # Chọn nhà phân phối là 'temurin' (một bản build phổ biến của OpenJDK)
          distribution: 'temurin'
          # Bật bộ nhớ đệm (cache) cho Maven để các lần build sau nhanh hơn
          cache: maven

      # Bước 3: Chạy lệnh build của Maven để tạo file .jar
      # 'run' có nghĩa là chạy một lệnh trong terminal của máy chủ ảo
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # Bước 4: Tải lên file .jar đã được tạo ra làm một "Artifact"
      # Artifact là nơi lưu trữ các sản phẩm của quá trình build để bạn có thể tải về
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          # Đặt tên cho gói artifact này (bạn sẽ thấy tên này khi tải về)
          name: TuTienHi-Plugin
          # Chỉ định đường dẫn đến file hoặc thư mục cần tải lên
          # Maven sẽ tạo file .jar trong thư mục 'target'
          path: target/TuTienHi-1.0.0.jar